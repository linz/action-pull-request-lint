name: "Lint pull requests"
description: "Lint pull request titles to ensure JIRA tickets and conventional commits are followed"
inputs:
  conventional:
    description: "Are conventional commits required ('error', 'warn', 'off')"
    required: false
    default: "error"
  conventional-scopes:
    description: "Optional list of allowed scopes"
    required: false
    default: ""
  jira:
    description: "Are JIRA tickets required ('error', 'warn', 'off')"
    required: false
    default: "false"
  jira-projects:
    description: "Optional list of allowed jira projects"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Check Pull Request Title
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const jiraRequired = '{{ inputs.jira }}'
            const jiraProjects = '{{ inputs.jira-projects }}'

            const conventionalRequired = '{{ inputs.conventional }}'
            const conventionalScopes = '{{ inputs.conventional-scopes }}'

            function warnOrFail(ctx, message) {
              if (ctx === 'error') {
                core.setFailed(message);
              } else if (ctx === 'warn') {
                core.warning(message)
              } else if(ctx === 'off') {
                return
              } else {
                throw new Error(`Failed to parse "${ctx}" as "error", "warn" or "off"`)
              }
            }

            const title = context.payload.pull_request.title
            console.log(`Testing title: '${title}'`)

            // The pattern for JIRA ticket format
            if (jiraRequired !== 'off') {
              const jiraRegex = jiraProjects ? '(' + jiraProjects.replace(/,/g, '|') + ')-\\d+' : '[A-Z]+-\\d+'
              const jiraPattern = new RegExp(jiraRegex, 'g');

              if (title.match(jiraPattern) == null) {
                console.log('Pull request title does not match JIRA ticket format!')
                warnOrFail(jiraRequired, 'Pull request title does not contain a JIRA ticket!')
              }
            }

            if (conventionalRequired !== 'off') {
              const scopeRegex = conventionalScopes ? conventionalScopes.replace(/,/g, '|') : '[a-z]+'
              const typeRegex = `build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|release`
              const conventionalRegex = new RegExp(`^(${typeRegex})(\\(${scopeRegex}\\))?(!)?: [^\\r\\n]+$`)

              // console.log(conventionalRegex, title.match(conventionalRegex))

              if (title.match(conventionalRegex) == null) {
                console.log('Pull request title does not match conventional format!')
                warnOrFail(conventionalRequired, 'Pull request title does not match conventional format!')
              }

            }

          } catch(e) {
            core.setFailed(e.message)
          }
